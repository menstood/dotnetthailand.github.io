{"componentChunkName":"component---src-templates-docs-js","path":"/programming-cookbook/github-cli/github-cli-secret","result":{"data":{"site":{"siteMetadata":{"title":".NET Thailand","docsLocation":"https://github.com/dotnetthailand/dotnetthailand.github.io","docsRepo":"dotnetthailand/dotnetthailand.github.io","docsLocationType":"github","editable":true,"contentRootPath":"content","siteUrl":"https://www.dotnetthailand.com"}},"mdx":{"fields":{"id":"cbfd6fde-b9a4-5c83-9d36-1f7d5c6093e7","title":"GitHub CLI secret","slug":"/programming-cookbook/github-cli/github-cli-secret"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"GitHub CLI secret\",\n  \"showMetadata\": true,\n  \"editable\": true,\n  \"showToc\": true,\n  \"order\": 1\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Requirements\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Set up GitHub CLI\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Log in to GitHub with GitHub CLI\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you haven't done all requirements, please refer to \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/programming-cookbook/github-cli/setup-github-cli.md/cloud-hosting/azure/azure-cli\"\n  }, \"Set up GitHub CLI document\"), \".\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Create or update a GitHub secret with CLI\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To create or update a GitHub secret run:\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"gh secret set <SECRET_NAME> \\\\\\n  --body <SECRET_VALUE> \\\\\\n  --repo <[HOST/]OWNER/REPO>\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Example code to create or update a GitHub secret:\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"gh secret set AZURE_WEBAPP_NAME \\\\\\n  --body codesanook-example-app-service \\\\\\n  --repo codesanook/codesanok-example-app-service\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Assume that we have a repository name \\\"codesanok-example-app-service\\\" under \\\"codesanook\\\" organization.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Example code to create or update a GitHub secret from content of a file:\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"gh secret set AZURE_WEBAPP_NAME \\\\\\n  < secret-value.json \\\\\\n  --repo codesanook/codesanok-example-app-service\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To show help of the command, run:\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"gh help secret set\\n\"))))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"List all existing GitHub secrets\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Command:\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"gh secret list --repo <[HOST/]OWNER/REPO>\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Example code to list all existing GitHub secret a specific repository:\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"gh secret list --repo codesanook/codesanok-example-app-service\\n\"))))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Remove an existing GitHub secret\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Command:\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"gh secret remove <SECRET_NAME> --repo <[HOST/]OWNER/REPO>\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Example code to list all existing GitHub secret a specific repository:\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"gh secret remove AZURE_WEBAPP_NAME --repo codesanook/codesanok-example-app-service\\n\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#requirements","title":"Requirements"},{"url":"#create-or-update-a-github-secret-with-cli","title":"Create or update a GitHub secret with CLI"},{"url":"#list-all-existing-github-secrets","title":"List all existing GitHub secrets"},{"url":"#remove-an-existing-github-secret","title":"Remove an existing GitHub secret"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"programming-cookbook/github-cli/github-cli-secret.md"},"frontmatter":{"metaTitle":null,"showMetadata":true,"editable":true,"showPreviousNext":null,"showToc":true}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"2d577106031c3d12e1c0fa7c8e1cb24513b65fc5","date":"2021-10-31 09:12"}},"pageContext":{"id":"cbfd6fde-b9a4-5c83-9d36-1f7d5c6093e7"}},"staticQueryHashes":["12478684","12478684","1306071104","2353585426","2353585426","2552263575","2552263575","2882937274","2882937274","353167761","353167761","3812332637","3812332637","4285724809"]}