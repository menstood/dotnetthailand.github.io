{"componentChunkName":"component---src-templates-docs-js","path":"/frontend-web/css-sass/text-transform","result":{"data":{"site":{"siteMetadata":{"title":".NET Thailand","docsLocation":"https://github.com/dotnetthailand/dotnetthailand.github.io","docsRepo":"dotnetthailand/dotnetthailand.github.io","docsLocationType":"github","editable":true,"contentRootPath":"content","siteUrl":"https://www.dotnetthailand.com"}},"mdx":{"fields":{"id":"da02610a-d1fb-5ea5-a7d8-42f1bde13059","title":"Text Transform","slug":"/frontend-web/css-sass/text-transform"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Text Transform\",\n  \"showMetadata\": true,\n  \"editable\": true,\n  \"showToc\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar TextTransformExample = makeShortcode(\"TextTransformExample\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"You can transform some text into uppercase, lowercase, or capitalize with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"text-transform\"), \", without any JavaScript.\"), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Uppercase\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"text-transform: 'uppercase';\\n\")), mdx(TextTransformExample, {\n    textTransform: \"uppercase\",\n    mdxType: \"TextTransformExample\"\n  })), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Lowercase\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"text-transform: 'lowercase';\\n\")), mdx(TextTransformExample, {\n    textTransform: \"lowercase\",\n    mdxType: \"TextTransformExample\"\n  })), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Capitalize\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"text-transform: 'capitalize';\\n\")), mdx(TextTransformExample, {\n    textTransform: \"capitalize\",\n    mdxType: \"TextTransformExample\"\n  })), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"References\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/CSS/text-transform\"\n  }, \"text-transform - CSS: Cascading Style Sheets | MDN\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#uppercase","title":"Uppercase"},{"url":"#lowercase","title":"Lowercase"},{"url":"#capitalize","title":"Capitalize"},{"url":"#references","title":"References"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"frontend-web/css-sass/text-transform.mdx"},"frontmatter":{"metaTitle":null,"showMetadata":true,"editable":true,"showPreviousNext":null,"showToc":true}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"2d577106031c3d12e1c0fa7c8e1cb24513b65fc5","date":"2021-10-31 09:12"}},"pageContext":{"id":"da02610a-d1fb-5ea5-a7d8-42f1bde13059"}},"staticQueryHashes":["12478684","12478684","1306071104","2353585426","2353585426","2552263575","2552263575","2882937274","2882937274","353167761","353167761","3812332637","3812332637","4285724809"]}